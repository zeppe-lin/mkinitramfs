MKINITRAMFS.CONFIG(5)

; *Important*:
; Keep in sync the variables description with mkinitramfs.cmdline(7).

# NAME

mkinitramfs.config - configuration file for mkinitramfs

# SYNOPSIS

*/etc/mkinitramfs/config*

# DESCRIPTION

The _mkinitramfs.config_ file controls how *mkinitramfs*(8) builds the
initial ramdisk image used at boot.
It controls which modules, hooks, and settings are included in the
initramfs image.

# FILE FORMAT

The file is a POSIX *sh*(1p) script consisting primarily of variable
assignments.
Lines beginning with '*#*' are comments.
Because the file is interpreted by the shell, standard syntax such as
quoting, variable expansion, command substitution, conditionals,
functions, and loops may also be used.

## Generic variables

The following variables affect general aspects of the build process.

*monolith*=<0 | 1>
	Set to *1* for a monolithic kernel with built-in drivers.
	Most distribution kernels are modular and do not need this
	option enabled.

	To check, verify whether
	_/lib/modules/<kernel-version>/modules_ exists.
	If absent, the kernel is likely monolithic and *monolith* must
	be set.

*hostonly*=<0 | 1>
	Copy only modules required by the current host, as detected
	via *sysfs*(5), instead of including all modules.
	This significantly reduces initramfs size.

	*Important*:
	Ignored if *monolith* is set to *1*.

	*Warning*:
	An initramfs built in *hostonly* mode may fail if booted on
	different hardware or if storage devices are relocated.

*compress*=<COMMAND [ARGS ...]>
	Command used to compress the initramfs image.
	Common choices include "xz", "zstd", "gzip", or "bzip2".
	Options such as compression level may be passed in ARGS.

*root*=<UUID | LABEL | /dev/\* | PARTUUID>
	Specify how to locate the root filesystem.

	UUID
		Lookup device by uuid.
	LABEL
		Lookup device by volume label.
	/dev/\*
		Lookup device by full path.
	PARTUUID
		Lookup device by partition uuid.

	*blkid*(8) (from toybox, busybox, util-linux, or e2fsprogs) is
	required to use UUID, LABEL, or PARTUUID.

	*Note*:
	PARTUUID is supported only by util-linux *blkid*(8).

*root_type*=<TYPE>
	Explicitly set the root filesystem type, instead of probing
	_/proc/mounts_.
	Must be specified if booting from a Live CD.

*root_opts*=<OPTS>
	Mount options for the root filesystem.
	See *fstab*(5) fourth field.

*extrafiles*=<FILE ...>
	Include additional files in the initramfs image.

*hooks*=<HOOK ...>
	Hooks extend *mkinitramfs*(8) with custom scripts, run in the
	order given.

	The following hooks are provided:

	*lvm*
		Adds support for LVM volumes at boot.

	*luks*
		Unlocks encrypted volumes during early boot.

	*smdev*
		Minimal static _/dev_ manager.

		<https://core.suckless.org/smdev/>

	*mdev*
		Busybox mdev device manager.

		<https://git.busybox.net/busybox/plain/docs/mdev.txt>

	*proc* (*CONFIG_UEVENT_HELPER*)
		Minimal _/proc_ setup and legacy kernel hotplug
		(uevent) support.

	*mdevd*
		Small, fast, stateless device manager.

		<https://skarnet.org/software/mdevd/>

	*eudev*
		udev-compatible device manager.

		<https://github.com/eudev-project/eudev>

	*loadkeys*
		Load keyboard layout with kbd's *loadkeys*(8).

	*loadkmap*
		Load keyboard layout with busybox *loadkmap*.

	*resume*
		Enable suspend-to-disk (hibernation) resume.

	*systemd-udevd*
		Device management with systemd-udevd.

	See below how to use them.

	Some hooks may have no configurable variables and are used
	'as is'.

	More detailed information and how to write your own hooks
	described in *mkinitramfs.hooks*(7).

## Hooks variables

The following variables are interpreted by hook scripts to customize
their behaviour.

The *lvm* hook recognizes the following variables:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*lvm_tag*=<TAG>
	Trigger LVM volumes by tag.
	Ignored if *lvm_name* or *lvm_group* is set.

*lvm_name*=<NAME>
	Trigger LVM volumes by name.
	Requires *lvm_group*.

*lvm_group*=<GROUP>
	Volume group name.

*lvm_config*=<0 | 1>
	Include host's _/etc/lvm/lvm.conf_ in the initramfs image.

*lvm_discard*=<0 | 1>
	Pass "issue_discards" to LVM.
	Useful for SSD's.


The *luks* hook recognizes the following variables:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*luks_key*=<PATH>
	Path to key file.

	*Important*:
	GPG-encrypted keys are not supported.

*luks_name*=<NAME>
	Name to assign in the device-mapper table after
	*cryptsetup*(8) unlocks *luks_root*.

*luks_root*=<UUID | LABEL | /dev/\* | PARTUUID>
	Device to unlock.

	The lookup method (UUID, LABEL, etc.) works the same way as
	for the generic *root* variable.

*luks_header*=<PATH>
	Path to detached LUKS header.

*luks_discard*=<0 | 1>
	Pass *--allow-discards* to *cryptsetup*(8), that allows the
	use of discard (TRIM) requests for your LUKS device.

	*Warning*:
	This option may have a negative security impact.
	See *cryptsetup*(8).


The *resume* hook recognizes the following variables:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*resume*=<UUID | LABEL | /dev/\* | PARTUUID>
	Device to resume from.
	This can be swap partition or a block device containing the
	swap file.

	The lookup method (UUID, LABEL, etc.) works the same way as
	for the generic *root* variable.

*resume_offset*=<OFFSET>
	Offset of the swap file on the device named by *resume*.
	Required only when resuming from a swap file.


The *loadkeys* and *loadkmap* hooks recognizes the following variables:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*keymap_path*=<PATH>
	Path to binary keymap.

	Both hooks serve the same purpose: *loadkeys* uses kbd's
	*loadkeys*(8), and *loadkmap* uses busybox *loadkmap*.

	Use one or the other, not both.


# FILES

_/etc/mkinitramfs/config_:
	Configuration file.


# EXAMPLES

The following are illustrative examples.
Adapt them to your system instead of copying verbatim.
Your configuration may (and should) differ.

1. Root device with *eudev* hook:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
hooks=eudev
root=/dev/sda1
```

2. Root device with a monolithic kernel and *proc* hook:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
hooks=proc
monolith=1
root=/dev/nvme0n1p1
```

3. Root device, host-only mode, compressed with gzip, and *mdevd*
hook:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
hostonly=1
hooks=mdevd
compress="gzip -9"
root=PARTUUID=8e05009d-a1d5-4fdb-b407-b0e79360555c
```

4. Root device with explicit filesystem type, *eudev* and *loadkmap*
hooks, and keymap path:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
root_type=f2fs
hooks="eudev loadkmap"
root=UUID=13bcb7cc-8fe5-4f8e-a1fe-e4b5b336f3ef
keymap_path=/usr/share/bkeymaps/colemak/en-latin9.bmap
```

Same example with *loadkeys* instead of *loadkmap*:
```
root_type=f2fs
hooks="eudev loadkeys"
root=UUID=13bcb7cc-8fe5-4f8e-a1fe-e4b5b336f3ef
keymap_path=/usr/share/kbd/keymaps/i386/colemak/en-latin9.map.gz
```

5. Encrypted root with LUKS:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
hooks="mdev luks"
root=LABEL=my_root
luks_discard=1
luks_key=/root/key
luks_header=/root/header
luks_root=PARTUUID=35f923c5-083a-4950-a4da-e611d0778121
```

6. LUKS on LVM with additional compression:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
compress="lz4 -9"
hooks="eudev lvm luks"
root=/dev/disk/by-uuid/aa82d7bb-ab2b-4739-935f-fd8a5c9a6cb0
luks_discard=1
luks_root=/dev/sdb2
lvm_config=1
lvm_discard=1
lvm_name=lvm1
lvm_group=lvm_grp2
```

7. Encrypted root with LUKS on LVM and hibernation resume:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
```
hostonly=1
compress="gzip --fast"
hooks="eudev luks lvm resume"
root=/dev/mapper/root
root_type=ext4
resume=/dev/mapper/swap
luks_discard=1
luks_name=crypt
luks_root=/dev/sda2
```


# SEE ALSO

*mkinitramfs*(8),
*mkinitramfs.cmdline*(7),
*mkinitramfs.hooks*(7)


# CAVEATS

Since _mkinitramfs.config_ is interpreted by the shell, it may include
conditionals, functions, or other logic.
This flexibility allows per-environment and other customization, but
also means that syntax errors will prevent *mkinitramfs*(8) from
starting.

; vim: ft=scdoc cc=72 tw=70
