MKINITRAMFS.CMDLINE(7)

; *Important*:
; Keep in sync the parameters description with mkinitramfs.config(5).

# NAME

mkinitramfs.cmdline - kernel command-line parameters for mkinitramfs

# DESCRIPTION

The *mkinitramfs(8)* utility provides a way to control configuration
dynamically via kernel parameters without needing to regenerate the
initramfs image.
These parameters take precedence over any corresponding variables set
in *mkinitramfs.config*(5).

## Generic parameters

*debug*=<0 | 1>
	Enable or disable debug mode.

	Default: 0 (disabled).

*break*=<BREAKPOINT>
	Specify a breakpoint at which the initramfs will drop to an
	interactive shell for debugging.

	The two built-in breakpoints are:

	_root_
		Before mounting root filesystem.
	_boot_
		After root is mounted, before switching to real init.

	Hooks (like *lvm*, *luks*, *eudev*) can define their own
	breakpoints, e.g., "break=lvm" or "break=luks", allowing shell
	drops at those hook points.

*root*=<UUID | LABEL | /dev/\* | PARTUUID>
	Specify which way initramfs will use to look up root
	filesystem.

	UUID
		Lookup device by uuid.
	LABEL
		Lookup device by label.
	/dev/\*
		Lookup device by full path.
	PARTUUID
		Lookup device by partition uuid.

	Initramfs must contain *blkid* utility (from toybox, busybox,
	util-linux, or e2fsprogs) for ability to use UUID, LABEL, or
	PARTUUID.

	*Note:*
	PARTUUID is supported only by util-linux *blkid*(8).

*root_type*=<TYPE>, *rootfstype*=<TYPE>
	Explicitly set the root filesystem type.
	Kernel must support specified type.

*rootdelay*=<DELAY>
	Specify maximum number of seconds to wait for root device
	instead of the default 30 seconds.

*root_opts*=<OPTS>, *rootflags*=<OPTS>
	Mount options for the root filesystem.
	See *fstab*(5) fourth field.

## Hooks parameters

Initramfs must contain appropriate hooks for ability to use below
parameters.

The parameters for *lvm* hook are as follows:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*lvm_tag*=<TAG>
	Trigger LVM volumes by tag.
	Ignored if *lvm_name* or *lvm_group* is set.

*lvm_name*=<NAME>
	Trigger LVM volumes by name.
	Requires *lvm_group*.

*lvm_group*=<GROUP>
	Volume group name.

*lvm_discard*=<0 | 1>
	Pass "issue_discards" to LVM.
	Useful for SSD's.

The parameters for *LUKS* hook are as follows:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*luks_name*=<NAME>
	Name to assign in the device-mapper table after
	*cryptsetup*(8) unlocks *luks_root*.

*luks_root*=<UUID | LABEL | /dev/\* | PARTUUID>
	Device to unlock.

	The lookup method (UUID, LABEL, etc.) works the same way as
	for the *root* parameter.

*luks_discard*=<0 | 1>
	Pass *--allow-discards* to *cryptsetup*(8), that allows the
	use of discard (TRIM) requests for your LUKS device.

	*Warning*:
	This option may have a negative security impact.
	See *cryptsetup*(8).

The parameters for *resume* hook are as follows:
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

*resume*=<UUID | LABEL | /dev/\* | PARTUUID>
	Device to resume from.
	This can be swap partition or a block device containing the
	swap file.

	The lookup method (UUID, LABEL, etc.) works the same way as
	for the *root* parameter.

*resume_offset*=<OFFSET>
	Offset of the swap file on the device named by *resume*.
	Required only when resuming from a swap file.

# EXAMPLES

Specify *root* option argument:
```
vmlinuz initrd=\\initramfs root=/dev/sda1 [...]
```

Disable *discards* for LUKS and LVM:
```
vmlinuz initrd=\\initramfs luks_discard= lvm_discard= [...]
```

Pass arguments to real init:
```
vmlinuz initrd=\\initramfs [...] -- arguments
```

# SEE ALSO

*mkinitramfs*(8),
*mkinitramfs.config*(5),
*mkinitramfs.hooks*(7)

; vim: ft=scdoc cc=72 tw=70
